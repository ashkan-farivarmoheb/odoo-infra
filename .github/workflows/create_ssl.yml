name: Create SSL

on:
  workflow_dispatch: # Enable manual triggering
    inputs:
      target-env:
        required: true
        type: choice
        options:
          - develop
          - prod
      name:
        required: true
        type: string
      domain:
        required: true
        type: string
      fqdns:
        type: string
        default: 'example.com,subddomain.example.com'

  workflow_call:
    inputs:
      target-env:
        required: true
        type: string
      name:
        required: true
        type: string  
      domain:
        required: true
        type: string
      fqdns:
        type: string
        default: 'example.com,subddomain.example.com'

    secrets:
      AWS_REGION:
        required: true
      AWS_ACCOUNT_ID:
        required: true
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true

jobs:
  deploy:
    name: Create a SSL for ${{ inputs.domain }}
    permissions:
      contents: none
    runs-on: ubuntu-latest
    environment:
      name: ${{ inputs.target-env }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Variables
        id: vars
        uses: actions/github-script@v3
        with:
          script: |
            const bucket = `${{inputs.target-env}}-ssl-service-${{inputs.name}}`
            core.exportVariable('bucket_name', bucket);
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.1.0  # Specify the Terraform version to use

      - name: Initialize Terraform
        run: terraform init -backend-config=hcl/${{ inputs.target-env }}.hcl
        working-directory: ssl
        
      - name: Validate Terraform configuration
        run: terraform validate
        working-directory: ssl
        
      - name: Plan Terraform changes
        run: terraform plan -var-file=tfvars/${{ inputs.target-env }}.auto.tfvars -var="environment=${{ inputs.target-env }}" -var="domain_name=${{ inputs.domain }}" -var="ssl_name=${{ inputs.name }}"
        working-directory: ssl
        
      - name: Apply Terraform changes
        run: terraform apply -auto-approve -var-file=tfvars/${{ inputs.target-env }}.auto.tfvars -var="environment=${{ inputs.target-env }}" -var="domain_name=${{ inputs.domain }}" -var="ssl_name=${{ inputs.name }}"
        working-directory: ssl

      - name: Upload SSL files to S3
        run: |
        
          aws s3 cp scripts s3://${{env.bucket_name}}/${{ inputs.name }}/ --recursive

      - name: List Uploaded Files
        run: aws s3 ls s3://${{env.bucket_name}}/${{ inputs.name }}/