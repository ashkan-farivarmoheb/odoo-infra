[
      {
          "name": "odoo",
          "image": "${aws_account_id}.dkr.ecr.${aws_region}.amazonaws.com/${repository_name}:${tag}",
          "cpu": 1024,
          "memory": 3584,
          "memoryReservation": 3072,
          "portMappings": [],
          "essential": true,
          "environment": [
            {
                "name": "HOST",
                "value": "0.0.0.0"
            },
            {
                "name": "ODOO_RC",
                "value": "/etc/odoo/odoo-${environment}.conf"
            },
            {
                "name": "NEW_RELIC_LICENSE_KEY",
                "value": "${new_relic_license_key}"
            },
            {
                "name": "NEW_RELIC_APP_NAME",
                "value": "${new_relic_app_name}"
            }
          ],
          "mountPoints": [
              {
                  "sourceVolume": "${environment}-${project}-efs",
                  "containerPath": "/mnt/efs",
                  "readOnly": false
              }
          ],
          "volumesFrom": [],
          "readonlyRootFilesystem": false,
          "logConfiguration": {
              "logDriver": "awslogs",
              "options": {
                  "awslogs-create-group": "true",
                  "awslogs-group": "/ecs/${project}",
                  "awslogs-region": "${aws_region}",
                  "awslogs-stream-prefix": "ecs"
              },
              "secretOptions": []
          },
          "healthCheck": {
              "command": [
                  "CMD-SHELL",
                  "curl -f http://localhost:8069 || exit 1"
              ],
              "interval": 30,
              "timeout": 60,
              "retries": 3,
              "startPeriod": 1
          }
      },
      {
          "name": "${nginx_repository_name}",
          "image": "${aws_account_id}.dkr.ecr.${aws_region}.amazonaws.com/${nginx_repository_name}:${nginx_tag}",
          "cpu": 512,
          "memory": 512,
          "memoryReservation": 512,
          "portMappings": [
              {
                  "name": "nginx-443-tcp",
                  "containerPort": 443,
                  "hostPort": 443,
                  "protocol": "tcp"
              }
          ],
          "dockerLabels": {
                "traefik.enable": "true",
                "traefik.http.routers.odoo-router.tls": "true",
                "traefik.http.routers.odoo-router.entrypoints": "websecure",
                "traefik.http.routers.odoo-router.rule": "Host(`${edge_url}`) && PathPrefix(`/web`)",
                "traefik.http.services.${environment}-${project}-service.loadbalancer.server.port": "443",
                "traefik.http.services.${environment}-${project}-service.loadbalancer.server.scheme": "https",
                "traefik.http.services.${environment}-${project}-service.loadbalancer.server.url": "https://${environment}.${project}.${base_url}",
                "traefik.http.services.${environment}-${project}-service.loadbalancer.passHostHeader": "true",
                "traefik.http.services.${environment}-${project}-service.loadbalancer.serversTransport": "odoo-transport",
                "traefik.http.services.${environment}-${project}-service.loadbalancer.healthcheck.path": "/info",
                "traefik.http.services.${environment}-${project}-service.loadbalancer.healthcheck.interval": "30s",
                "traefik.http.services.${environment}-${project}-service.loadbalancer.healthcheck.timeout": "5s",
                "traefik.http.services.${environment}-${project}-service.loadbalancer.healthcheck.scheme": "https",
                "traefik.http.services.${environment}-${project}-service.loadbalancer.healthcheck.port": "443"
            },
          "essential": false,
          "environment": [
            {
                "name": "ENVIRONMENT",
                "value": "${environment}"
            }
          ],
          "mountPoints": [],
          "volumesFrom": [],
          "logConfiguration": {
              "logDriver": "awslogs",
              "options": {
                  "awslogs-create-group": "true",
                  "awslogs-group": "/ecs/${project}/nginx",
                  "awslogs-region": "${aws_region}",
                  "awslogs-stream-prefix": "ecs"
              },
              "secretOptions": []
          },
          "healthCheck": {
              "command": [
                  "CMD-SHELL",
                  "curl -f http://localhost:80/health || exit 1"
              ],
              "interval": 30,
              "timeout": 5,
              "retries": 3,
              "startPeriod": 1
          }
      }
]
